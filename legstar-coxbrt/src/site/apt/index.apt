 -----
 LegStar COXB Runtime
 -----
 Fady Moussallam
 -----
 16 January 2007
 -----

COXB Runtime (Coxbrt) overview

  The LegStar Coxbrt project provides runtime binding between XML serialized data described by an
  XML Schema and z/OS data described by a COBOL group element. It is part of the LegStar project,
  an open-source initiative toward service enablement of legacy applications.

  Using Coxbrt you can convert XML to z/OS data buffers and vice-versa.
  
  Coxbrt is based on {{{https://jaxb.dev.java.net/} JAXB}}. This means that XML data is first converted to java using standard JAXB
  capabilities. The resulting Java classes are then used to produce the z/OS buffer.
  
  There are 2 sets of classes in Coxbrt:
  
   * The first set of classes, found under the package com.legstar.coxb.reflect, uses reflection to
  gather Java to COBOL mapping metadata. This only works if the Java classes are annotated with
  COBOL specific annotations. Typically, such classes are generated by Coxbgen, another Legstar
  module but they can be handcrafted as well.
  
   * The second set of classes, under the com.legstar.coxb.rt package, does not use reflection. They
  are meant to be used by other classes which can also be generated by Coxbgen. In this case, the
  mapping metadata is hardcoded in the generated classes.
  
  The second set of classes provides better performances but less maintainability than the first set.
  
  For answers to common questions about LegStar Coxbrt, see the {{{faq.html} FAQ}}.
