
package com.legstar.test.cixs.dplarcht;
import javax.jws.WebService;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import com.legstar.host.invoke.HostInvoke;
import com.legstar.host.invoke.HostInvokeException;
import com.legstar.host.invoke.HostInvokeFactory;
import com.legstar.messaging.Address;


/**
 * Web service enpoint implementation.
 * 
 * This class was generated by CIXS generator.
 * 2007-04-06T12:06:48.406+02:00
 */

@WebService(endpointInterface = "com.legstar.test.cixs.dplarcht.Dplarcht",
        serviceName = "dplarchtService",
        targetNamespace = "http://cixs.test.legstar.com/dplarcht")
public class DplarchtImpl implements Dplarcht {

  /** The JNDI locator for the configuration file name.*/
  private static final String JNDI_CONFIG_FILE =
	  "java:comp/env/legstar/configFileName";
	  
  /** The default configuration file name if it cannot be recovered from JNDI.*/
  private static final String DEFAULT_CONFIG_FILE = "config.xml";

  /** The configuration file name. */
  private String mConfigFileName;


  /** Properties for operation dplarcht. */    
  private static final String  DPLARCHT_PROP_FILE = "dplarcht.properties";

  /** {@inheritDoc} */
  public final com.legstar.test.coxb.dplarcht.
          DfhcommareaType dplarcht(
          final com.legstar.test.coxb.dplarcht.
                DfhcommareaType request,
          final DplarchtHostHeader hostHeader)
      throws DplarchtFault {
    
    /* The JAXB input factory. */
    com.legstar.test.coxb.dplarcht.ObjectFactory jaxbInFactory =
          new com.legstar.test.coxb.dplarcht.ObjectFactory(); 
    
    /* The JAXB output factory. */
    com.legstar.test.coxb.dplarcht.ObjectFactory jaxbOutFactory =
          new com.legstar.test.coxb.dplarcht.ObjectFactory();  
    
    com.legstar.test.coxb.dplarcht.
    DfhcommareaType reply = null;
    
    try {
              
      /* Initialize invoker with static data and data from headers */
      HostInvoke mInvoker = HostInvokeFactory.createHostInvoke(
              mConfigFileName, getAddress(hostHeader), DPLARCHT_PROP_FILE);

      /* Prepare the input parameter set using static binding */
      com.legstar.test.coxb.dplarcht.bind.
        DfhcommareaTypeBinding cein =
          new com.legstar.test.coxb.dplarcht.bind.
              DfhcommareaTypeBinding(jaxbInFactory, request);
      
      /* Prepare the output parameter set using static binding */
      com.legstar.test.coxb.dplarcht.bind.
      DfhcommareaTypeBinding ceout =
          new com.legstar.test.coxb.dplarcht.bind.
              DfhcommareaTypeBinding(jaxbOutFactory);
      
      /* Call remote program */
      mInvoker.invoke((hostHeader == null) ? "alltypes" 
    		  : hostHeader.getHostRequestID(), cein, ceout);
      
      /* Get reply object */
      reply = ceout.getJaxbObject(); 
      
    } catch (HostInvokeException e) {
      reportDplarchtFaultException(e,
          "Failed to invoke host program:");
    }

    return reply;
  }

  /**
   * Formats a fault element to notify client of an exception.
   *
   * @param e the exception which occured
   * @param text short message describing the context
   * @throws DplarchtFault the fault exception
   */
  private void reportDplarchtFaultException(
      final Exception e,
      final String text) throws DplarchtFault {
    e.printStackTrace();
    DplarchtFaultInfo faultInfo = new DplarchtFaultInfo();
    faultInfo.setMessage(e.getMessage());
    faultInfo.setDetail("Operation="
            + "Dplarcht"
            + " Package="
            + "com.legstar.test.cixs.dplarcht");
    throw (new DplarchtFault(text + ' ' 
            + faultInfo.getMessage(), faultInfo));
    
  }


  /** Lookup the fonfiguration file name at construction time. */
  public DplarchtImpl() {
	try {
		Context initCtx = new InitialContext();
		mConfigFileName = (String) initCtx.lookup(JNDI_CONFIG_FILE);
	} catch (NamingException e) {
		mConfigFileName = DEFAULT_CONFIG_FILE;
	}
  }

  /**
   * Extracts header data from SOAP header and create an Address.
   * @param hostHeader the JAXB object mapping the SOAP header element
   * @return the new host Address
   */
  private Address getAddress(
          final DplarchtHostHeader hostHeader) {
      if (hostHeader == null) {
          return null;
      }
      Address address = new Address(hostHeader.getHostEndPoint());
      address.setHostCharset(hostHeader.getHostCharset());
      address.setHostUserID(hostHeader.getHostUserID());
      address.setHostPassword(hostHeader.getHostPassword());
      address.setHostTraceMode(hostHeader.getHostTraceMode());
      return address;
  }
  
}
