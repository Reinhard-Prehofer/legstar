<?xml version="1.0" standalone="yes"?>
<!-- =================================================================================
     Iterates thru XML schemas and generates COXB binding classes for each. 
     This script assumes JAXB classes have already been generated for those
     schemas.
  -->
<project basedir="..\..\.." default="compileAllCOXB">
	
	<!-- ===========================================================  -->
	<!-- Setup environment
	  -->
	<target name="init">

		<!-- Target location for generated COXB sources   -->
		<property name="coxb.src.dir" value="${basedir}/../legstar-coxbgen-cases/src/main/java"/>
		<!-- Target location for generated COXB binaries   -->
		<property name="coxb.bin.dir" value="${basedir}/../legstar-coxbgen-cases/target/classes"/>
		<!-- Location of XML schemas  -->
	 	<property name="xsd.dir" value="${basedir}/../target/cases/schema" />
		<!-- The JAXB root object name. Binding is for a single complex
		     element. (Assuming all schemas have same root name here)   -->
	 	<property name="jaxb.root.name" value="Dfhcommarea" />
		<!-- Location of LegStar binaries   -->
		<property name="build.dir" value="${basedir}/target"/>
			
		<!-- Generator ant task -->
		<taskdef name="coxbgen"
			classname="com.legstar.coxb.gen.CoxbBindingGenerator"
			classpathref="classpath"/>

		<!-- Ant-Contrib tasks. Needed for "foreach ", regex, switch, ...
		     (ant-contrib.jar must be in ant classpath) -->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
			
	</target>

	<!-- ===========================================================  -->
	<!-- Generate COXB output for a each XML schema in a given folder. 
	     Methods with same request/reply are treated alltogether, others
	     must be dealt with individually
	  -->
	<target name="generateAllCOXB" depends="init">
		<mkdir dir="${coxb.bin.dir}"/>
		<foreach target="generateCOXB" param="xsd.file" inheritrefs="true">
			<path>
				<fileset dir="${xsd.dir}" includes="*.xsd" excludes="clegtstc.cbl.xsd LSFILEAL.xsd LSFILEAC.xsd enumvar.xsd MSNSearch.xsd cultureinfo.xsd jvmquery.xsd jvmquery-ws.xsd VARAR021.xsd"/>
			</path>
		</foreach>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAL.xsd"
			JaxbRootObjectName="RequestParms"
			targetDir="${coxb.src.dir}"
		/>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAL.xsd"
			JaxbRootObjectName="ReplyData"
			targetDir="${coxb.src.dir}"
			/>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAC.xsd"
			JaxbRootObjectName="QueryData"
			targetDir="${coxb.src.dir}"
			/>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAC.xsd"
			JaxbRootObjectName="QueryLimit"
			targetDir="${coxb.src.dir}"
			/>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAC.xsd"
			JaxbRootObjectName="ReplyStatus"
			targetDir="${coxb.src.dir}"
			/>
		<coxbgen 
			XsdFile="${xsd.dir}/LSFILEAC.xsd"
			JaxbRootObjectName="ReplyData"
			targetDir="${coxb.src.dir}"
			/>
        <coxbgen 
            XsdFile="${xsd.dir}/cultureinfo.xsd"
            JaxbRootObjectName="GetInfo"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/cultureinfo.xsd"
            JaxbRootObjectName="GetInfoResponse"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/jvmquery.xsd"
            JaxbRootObjectName="JvmQueryRequest"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/jvmquery.xsd"
            JaxbRootObjectName="JvmQueryReply"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/jvmquery-ws.xsd"
            JaxbRootObjectName="QueryJvm"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/jvmquery-ws.xsd"
            JaxbRootObjectName="QueryJvmResponse"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/MSNSearch.xsd"
            JaxbRootObjectName="Search"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/MSNSearch.xsd"
            JaxbRootObjectName="SearchResponse"
            targetDir="${coxb.src.dir}"
            />
        <coxbgen 
            XsdFile="${xsd.dir}/VARAR021.xsd"
            JaxbRootObjectName="SearchGrplst"
            targetDir="${coxb.src.dir}"
            />
        <!--
		<coxbgen 
			XsdFile="${xsd.dir}/enumvar.xsd"
			JaxbRootObjectName="SearchRequestType"
			targetDir="${coxb.src.dir}"
			/>
		-->
		</target>
	
	<!-- ===========================================================  -->
	<!-- Compiles the generated binding classes
	  -->
	<target name="compileAllCOXB" depends="generateAllCOXB">
		 <javac  target="1.5"
    	         srcdir="${coxb.src.dir}"
		 	     includes="**/*.java"
	             excludes="local/**"
		         destdir="${coxb.bin.dir}"
		 	     classpathref="classpath"
		         fork="yes"
		 />
	</target>

	<!-- ===========================================================  -->
	<!-- Generate binding classes by reflecting on JAXB classes.
	  -->
	<target name="generateCOXB" depends="init">
	    <echo message="Generating binding classes for ${xsd.file}" />
		<coxbgen 
			XsdFile="${xsd.file}"
			JaxbRootObjectName="${jaxb.root.name}"
			targetDir="${coxb.src.dir}"
		/>
	</target>

	
</project>
