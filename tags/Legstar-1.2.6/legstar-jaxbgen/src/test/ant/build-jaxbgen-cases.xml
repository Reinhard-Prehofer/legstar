<?xml version="1.0" standalone="yes"?>
<!-- =================================================================================
     Iterates thru XML schemas and generates JAXB classes for each. 
     This script can also be used to generate JAXB classes for a single XML
     schema.
  -->
<project basedir="../../.." default="generateAllJAXB">
  
    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">
        <!-- Target location for generated JAXB sources   -->
        <property name="jaxb.src.dir" value="${basedir}/../legstar-jaxbgen-cases/src/main/java"/>
        <!-- Location of XML schemas  -->
        <property name="xsd.dir" value="${basedir}/../legstar-schemagen/src/test/schema" />
        <!-- Location of external bindings files   -->
        <property name="bindings.dir" value="${basedir}/../legstar-jaxbgen/src/main/resources/xjb" />
        <!-- The regular sun JAXB XJC tool ant task  -->
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJC2Task" classpathref="classpath"/>
    </target>

    <!-- ===========================================================  -->
    <!-- Generate the JAXB classes source
    -->
    <target name="generateAllJAXB" depends="init">
        <echo message="Generating JAXB classes for ${xsd.dir}" />
        <xjc destdir="${jaxb.src.dir}" extension="true" removeOldOutput="yes">
            <schema dir="${xsd.dir}"/>
            <arg value="-Xlegstar-code" />
            <!--Without this option (no validation), out of memory errors -->
            <arg value="-nv" />
            <!-- External XJC bindings directory. Collects all *.xjb files -->
            <arg value="-b" />
            <arg value="${bindings.dir}" />
        </xjc>
    </target>

</project>
