CICS MQ handler LSMQHBIN

* Overview:

 This C/370 program can be used to remotely link to a CICS program over 
 MQ. LSMQHBIN uses IBM WebSphere MQ for z/OS product.

 Clients using LSMQHBIN are expected to send binary data in the
 MQ payload. The client is responsible for formatting the data according
 to the target CICS program expectations. LSMQHBIN does not perform any
 translation over the data. This means it is the client responsibility to
 perform such conversions as Ascii to Ebcdic, host numeric encoding, etc.
 LSMQHBIN has a very minimal footprint on the mainframe.
 
 LSMQHBIN is associated with a CICS transaction that is triggered when
 messages are received in a designated request queue. A sample MQDEFJCL
 JCL is provided to guide you thru setting up such an MQ CICS trigger.
 
 Another program, called {{{LSMQCBIN-readme.html}LSMQCBIN}} is also provided
 as an optional optimization when activity becomes high and you don't want
 each new message to start a CICS transaction. The controller will limit
 the number of started transactions.

* Prerequisites:

 The triggering mechanism in CICS is provided by the standard CICS MQ
 Adapter (CKTI). The CICS MQ Adapter must be installed in the target
 CICS region.
 
 LSMQHBIN uses the LSLNKBIN program part of the
 {{{../legstar-csokrt}Socket Transport}}. Please refer to the
  {{{../legstar-csokrt/LSSOKBIN-readme.html}LSSOKBIN documentation}} for
 instructions on how to install this program.
 
 LSMQHBIN also uses the LSMSGLIB and LSCOMLOG programs part of the
 {{{../legstar-messaging}Messaging Protocol}}. Please refer to the
  {{{../legstar-messaging/LSMSGLIB-readme.html}LSMSGLIB documentation}} for
 instructions on how to install these programs.
 
 You will need WebSphere MQ for z/OS version 5.3 or above.
   
* Installation:

 LSMQHBIN can be installed from source or using the common distribution of all
 ZOS modules available {{{../legstar-distribution-zos/index.html}here}}.
  
 If you decide to compile the sources,  You will need a C/370 compiler.
 Since LSMQHBIN is also a CICS program you can use the CICS procedure called
 DFHYITDL to perform the translation and compilation (see C370CMQH for a
 sample).
 
 LSMQHBIN actually uses a library called LSMQLLIB that you need to
 compile first (see C370CMQL for a sample JCL).

* Limitations:

  - LSMQHBIN does not support the INPUTMSG option of the LINK command.
 
* This program has been tested for:

  - CICS TS 2.3 (6.3.0 Command language translator) and TS 3.1 (6.4.0)
 
  - C/370 for OS/390 V2 R10

  - WebSphere MQ for z/os 5.3

* How to use:

 Once LSMQHBIN is compiled in a library available to your CICS
 region in the RPL list, you might need to define it, as well as
 LSMQLLIB, using RDO (unless programs get autoinstalled).

 Use the sample MQDEFJCL as a guide to creating the various MQ resources that
 are necessary to connect from client to host over MQ.

 LSMQHBIN serves clients using the {{{../legstar-cmqrt}LegStar
 cmqrt library}}. This library formats the MQ payload as
 compact binary.
 
  LSMQHBIN expects the following standard MQ message descriptor fields:

*-------------------------+-----------+--------------------------------------------------+
| replyToQueueName        | Mandatory | Where replies will be stored (including errors)  |
*-------------------------+-----------+--------------------------------------------------+
| replyToQueueManagerName | Optional  | The MQ Manager for the reply queue.              |
*-------------------------+-----------+--------------------------------------------------+
| messageId               | Mandatory | A unique message identifier. Will be propagated  |
|                         |           | back as a correlationId in the reply.            |
*-------------------------+-----------+--------------------------------------------------+
| correlationId           | Mandatory | Will be  used as a trace ID on the host          |
|                         |           | (should be EBCDIC)                               |
*-------------------------+-----------+--------------------------------------------------+
Standard MQ message descriptor fields

 In addition, these optional context headers can be specified:

*-------------------+-----------+----------------------------------------------+
| applicationIdData | Optional  | Turns traces on in CICS if value is 'true'.  |
*-------------------+-----------+----------------------------------------------+
| userId            | Optional  | Informational, propagated on replies.        |
*-------------------+-----------+----------------------------------------------+
MQ context headers

 Upon reply, any error will be signaled back with an MQ content that starts with the
 "LSOKERR0" eye catcher characters. The eye catcher is followed by a human readable
 error message in EBCDIC.
 
 Errors trapped by LSMQHBIN are also logged into CICS CESE TD Queue which
 usually points to CEEMSG.

 If no errors occured, the reply data will be binary.


   