 -----
 Overview
 -----
 Fady Moussallam
 -----
 21 January 2009
 -----

Mainframe Service Generator (Cixsgen) overview

 Service Generator is a development time tool that Service-enable mainframe programs.
 
 The generation features are available as a set of ant tasks or as a set of {{{../legstar-common-plugin}Eclipse plugins}}.
 
 Cixsgen comes with 2 primary features:
 
  * Adapter Generator which exposes mainframe programs as Web Services.

  * Proxy Generator which give mainframe programs outbound access to Web Services or pure java objects (POJOs).
  
 []
 
 Cixsgen models mainframe interactions by mapping java-side operations, or methods, to mainframe-side programs.
 A generated Adapter will expose one operation for each mainframe program it adapts. A generated Proxy,
 will expose one Web Service operation, of POJO method, to a mainframe program.
 
 Cixsgen models inputs and outputs using Binding classes, which are JAXB classes with COBOL annotations
 (such as generated by {{{../legstar-coxbgen}COBOL Binding Generator}}).
 
 Cixsgen produces various Java and XML artifacts that you can deploy in J2EE containers such as
 Tomcat or Jetty. In the case of Proxies, it also generate a sample COBOL program.
 
 At runtime, generated artifacts for Adapters will use {{{../legstar-invoker}Mainframe Adapter Runtime}}) and
 generated artifacts for Proxies will use {{{../legstar-c2wsrt}Mainframe Proxy Runtime}}.
 
 For instructions on how to install and use this generator follow {{{release-notes.html}this link}}.
 
 For answers to common questions about LegStar Cixsgen, see the {{{faq.html} FAQ}}.
 
 There is further information available depending on your primary target:
 
 For Service Adapters, check the following links:
 
 * {{{../legstar-schemagen}COBOL Structures Mapping Generator}} 

 * {{{../legstar-coxbgen}COBOL Binding Generator}} 

 * {{{../legstar-invoker}Adapter Runtime}}
 
 []
 
 For Service Adapters, you also have a choice of transports for Mainframe access:
 
 * {{{../legstar-csokrt}Socket Transport}} 

 * {{{../legstar-chttprt}HTTP Transport}} 

 * {{{../legstar-cmqrt}WebSphere MQ Transport}} 

 * {{{../legstar-engine}Connection Pooling Engine}} 

 []
 
 For Service Proxies, check the following links:
 
 * {{{../legstar-xsdcgen}Complex Types Mapping Generator}} 
 
 * {{{../legstar-coxbgen}COBOL Binding Generator}} 

 * {{{../legstar-c2wsrt}Proxy Runtime}} 
 
 []
 
