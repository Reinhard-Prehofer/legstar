<!-- =================================================================================
     This script generates a Mapping XML Schema from a set of Java classes.
  -->
<project basedir=".." default="generateXSD" name="generate-XSD">

  <!-- ===========================================================  -->
  <!-- Setup environment
    -->
  <target name="init">
    
    <!-- Root Java classes   -->
    <property name="request.class.name" value="com.legstar.xsdc.test.cases.jvmquery.JVMQueryRequest" />
    <property name="reply.class.name" value="com.legstar.xsdc.test.cases.jvmquery.JVMQueryReply" />
    <!-- Target package name for JAXB classes   -->
    <property name="jaxb.package.name" value="com.legstar.test.coxb.jvmquery" />
    <!-- Target namespace for generated XML schema   -->
    <property name="namespace" value="http://jvmquery.cases.test.xsdc.legstar.com/" />
    <!-- Target location for generated XML schema   -->
    <property name="schema.dir" value="schema" />
    <!-- Name of generated XSD file  -->
    <property name="gen.file.name" value="jvmquery.xsd" />
      
    <!-- Classpath setting -->
    <path id="classpath">
        <fileset dir="${basedir}" includes="lib/*.jar" />
    	<pathelement location="${basedir}/target/classes"/>
    </path>

    <!-- Java Mapping Generator ant task -->
    <taskdef name="j2scgen"
      classname="com.legstar.j2sc.gen.JavaToXsdCobolTask"
      classpathref="classpath"/>
  
  </target>

  <!-- ===========================================================  -->
  <!-- Generate a Mapping XML Schema. Here we explicitly
       specify the root class names. As an alternative, the POJO
       could be annotated with JSR 181 XmlRootElement.
    -->
  <target name="generateXSD" depends="init">
    <echo message="Generating annotated ${gen.file.name}" />
    <mkdir dir="${schema.dir}"/>
    <j2scgen 
      namespace="${namespace}"
      jaxbPackageName="${jaxb.package.name}"
      targetDir="${schema.dir}"
      targetXsdFileName="${gen.file.name}"
    >
    	<rootClass name="${request.class.name}"/>
    	<rootClass name="${reply.class.name}"/>
    </j2scgen>
  </target>

</project>
