 -----
 LegStar Cixsgen
 -----
 Fady Moussallam
 -----
 16 August 2007
 -----

Service Generator (Cixsgen) overview

  LegStar Cixsgen generates JAXWS endpoints that implement Web Service interfaces for 
  legacy CICS programs.
  
  When these JAXWS endpoints are deployed in a suitable container (such as Apache Tomcat)
  the CICS programs are in effect, Web Service enabled.
  
  Before such a JAXWS endpoint can be generated, you must create a set of JAXB binding
  classes, with COBOL annotations (such as generated by {{{../legstar-coxbgen} Binding Generator}}).
  Binding classes map JAXB objects to COBOL input and output structures expected by the
  target CICS program.
  
  Cixsgen generates various artifacts:
 
  * Java classes implementing a JAXWS enpoint.
  
  * Web descriptors for deployment in a servlet engine such as Tomcat.
  
  * Ant script that automates the deployment to Tomcat.
  
  []
  
  From a connectivity standpoint, the generated JAXWS endpoint uses the {{{../legstar-invoker} Invoker}}
  module.
  
  For answers to common questions about LegStar Cixsgen, see the {{{faq.html} FAQ}}.
  
Running the Ant script
  
  The build-service.xml ant script shows how to generate a Web Service for a commarea-driven
  program.
  
  Service generator now supports container-driven programs. This is how you would use the
  ant task for a CICS program that takes 2 containers on input and produces 2 containers on
  out:
  
+------------------
    <cixsgen targetSrcDir="${cixs.src.dir}"
             targetWDDDir="${wdd.dir}/${service}"
             targetPropDir="${prop.dir}"
             targetAntDir="${ant.dir}/${service}"
             targetWarDir="${war.dir}"
             jaxbBinDir="${jaxb.bin.dir}"
             coxbBinDir="${coxb.bin.dir}"
             cixsBinDir="${cixs.bin.dir}"
             custBinDir="${cust.bin.dir}"
      >
      <cixsService name="${service}"
        endpointPackageName="${cixs.package.pfx}.${service}"
        targetNamespace="${cixs.namespace.pfx}/${service}">
        <cixsOperation name="${service}"
          cicsProgramName="${service}"
          cicsChannel="LSFILEAC-CHANNEL">
          <input
            jaxbType="QueryDataType"
            jaxbPackageName="${jaxb.package.pfx}.${service}"
            cicsContainer="QueryData"
          />
          <input
            jaxbType="QueryLimitType"
            jaxbPackageName="${jaxb.package.pfx}.${service}"
            cicsContainer="QueryLimit"
          />
          <output
            jaxbType="ReplyStatusType"
            jaxbPackageName="${jaxb.package.pfx}.${service}"
            cicsContainer="ReplyStatus"
          />
          <output
            jaxbType="ReplyDataType"
            jaxbPackageName="${jaxb.package.pfx}.${service}"
            cicsContainer="ReplyData"
          />
        </cixsOperation>
      </cixsService>
    </cixsgen>
+------------------
