<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================
     Generate a web service adapter for a mainframe program.
     This script creates all artifacts needed for a JAXWS endpoint that
     expose a mainframe proram as a Web Service.
     Prerequisite: COBOL binding classes should have been generated
     using Coxbgen prior to using this script.
  -->
<project basedir=".." default="compileService" name="generate-service">

  <!-- ===========================================================  -->
  <!-- Setup environment
    -->
  <target name="init">

    <property environment="env"/>
    <!-- Service name   -->
    <property name="service" value="lsfileae" />
    <!-- CICS program name   -->
    <property name="cics.program.name" value="LSFILEAE" />
    <!-- The input JAXB type name   -->
    <property name="jaxb.root.name.in" value="Dfhcommarea" />
    <!-- The output JAXB type name   -->
    <property name="jaxb.root.name.out" value="Dfhcommarea" />
    <!-- JAXB classes package name prefix    -->
    <property name="jaxb.package.pfx" value="legstar.test"/>
    <!-- CIXS classes package name prefix    -->
    <property name="cixs.package.pfx" value="legstar.test.ws"/>
    <!-- CIXS WSDL Namespace prefix    -->
    <property name="cixs.namespace.pfx" value="http://test.legstar/ws"/>

    <!-- CIXS Sources target location   -->
    <property name="src.dir" value="${basedir}/src/main/java"/>
    <!-- CIXS binaries target location  -->
    <property name="bin.dir" value="${basedir}/target/classes"/>
    <!-- Ant scripts target location   -->
    <property name="ant.dir" value="${basedir}/src/main/ant/${service}"/>
    <!-- Web descriptors target location   -->
    <property name="wdd.dir" value="${basedir}/src/main/WebContent/${service}/WEB-INF"/>
    <!-- Properties files target location   -->
    <property name="prop.dir" value="${wdd.dir}/classes"/>

    <!-- Location of JAXB classes   -->
    <property name="jaxb.bin.dir" value="${basedir}/target/classes"/>
    <!-- Location of COXB binding classes   -->
    <property name="coxb.bin.dir" value="${basedir}/target/classes"/>
    <!-- Location of custom code classes   -->
    <property name="cust.bin.dir" value="${basedir}/target/classes"/>
    
    <!-- War files target location   -->
    <condition property="war.dir" value="${env.CATALINA_BASE}/webapps" else="${env.CATALINA_HOME}/webapps">
        <isset property="env.CATALINA_BASE"/> 
    </condition>
    
    <!-- Classpath setting -->
    <path id="classpath">
        <pathelement location="${jaxb.bin.dir}"/>
        <pathelement location="${coxb.bin.dir}"/>
        <pathelement location="${cust.bin.dir}"/>
        <fileset dir="${basedir}" includes="lib/*.jar" />
    </path>

    <!-- Web Service Adapter Generator ant task -->
    <taskdef name="jaxws2cixsgen"
      classname="com.legstar.cixs.jaxws.gen.Jaxws2CixsGenerator"
      classpathref="classpath" 
    /> 

  </target>

  <!-- ===========================================================  -->
  <!-- This step creates all the artifacts for a service.  -->
  
  <target name="generateService" depends="init">
    
    <jaxws2cixsgen targetSrcDir="${src.dir}"
             targetBinDir="${bin.dir}"
             targetWDDDir="${wdd.dir}"
             targetPropDir="${prop.dir}"
             targetAntDir="${ant.dir}"
             targetWarDir="${war.dir}"
             jaxbBinDir="${jaxb.bin.dir}"
             coxbBinDir="${coxb.bin.dir}"
             custBinDir="${cust.bin.dir}"
      >
        <!-- This sample is for a commarea-driven program. If your
             program is container-driven, you need to add the
             cicsChannel attribute to the cixsOperation element,
             specify as many input and output elements as necessary
             providing  a cicsContainer attribute for each. -->
        <cixsJaxwsService name="${service}"
            packageName="${cixs.package.pfx}.${service}"
            targetNamespace="${cixs.namespace.pfx}/${service}">
            <cixsOperation name="${service}"
                cicsProgramName="${cics.program.name}">
                <input
                    jaxbType="${jaxb.root.name.in}"
                    jaxbPackageName="${jaxb.package.pfx}.${service}"
                />
                <output
                    jaxbType="${jaxb.root.name.out}"
                    jaxbPackageName="${jaxb.package.pfx}.${service}"
                />
            </cixsOperation>
        </cixsJaxwsService>
    </jaxws2cixsgen>
    
  </target>
   
  <!-- ===========================================================  -->
  <!-- Compile the generated service classes
    -->
  <target name="compileService" depends="generateService">
    <mkdir dir="${bin.dir}"/>
    <javac target="1.5"
    	   srcdir="${src.dir}"
           includes="**/*.java"
           destdir="${bin.dir}"
           classpathref="classpath"
           fork="yes"
    />
  </target>
  
</project>