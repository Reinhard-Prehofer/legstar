
package com.legstar.test.cixs.redopera;
import javax.jws.WebService;
import com.legstar.cixs.coxb.CIXSParameter;
import com.legstar.cixs.coxb.ICIXSInvoker;
import com.legstar.cixs.coxb.CIXSInvokerFactory;
import com.legstar.cixs.coxb.CIXSHeader;
import com.legstar.cixs.coxb.CIXSException;


/**
 * Web service enpoint implementation.
 * 
 * This class was generated by CIXS version 1.0.
 * 2007-02-06T14:30:57.812+01:00
 */

@WebService(endpointInterface = "com.legstar.test.cixs.redopera.Redopera",
        serviceName = "redoperaService",
        targetNamespace = "http://cixs.test.legstar.com/redopera")
public class RedoperaImpl implements Redopera {

  /** The input parameter set for the invoke method. */
  private CIXSParameter mInParameter;
  
  /** The output parameter set for the invoke method. */
  private CIXSParameter mOutParameter;

  /** The invoker object. */
  private ICIXSInvoker mInvoker;


  /**
   * Contructor gets an invoker object.
   * @throws RedoperaFault if fails to get invoker 
   */
  public RedoperaImpl() throws RedoperaFault {
    CIXSInvokerFactory cf = new CIXSInvokerFactory();
    try {
        mInvoker = cf.createInvoker();
        mInParameter = mInvoker.createParameter();
        mOutParameter = mInvoker.createParameter();
    } catch (CIXSException e) {
        reportRedoperaFaultException(e, "Failed to create an invoker");
    }
  }
  
  /** {@inheritDoc} */
  public final com.legstar.test.coxb.redopera.
          DfhcommareaType redopera(
          final com.legstar.test.coxb.redopera.
                DfhcommareaType request,
          final RedoperaHostHeader hostHeader)
      throws RedoperaFault {
    
    /* The JAXB input factory. */
    com.legstar.test.coxb.redopera.ObjectFactory jaxbInFactory =
          new com.legstar.test.coxb.redopera.ObjectFactory(); 
    
    /* The JAXB output factory. */
    com.legstar.test.coxb.redopera.ObjectFactory jaxbOutFactory =
          new com.legstar.test.coxb.redopera.ObjectFactory();  
    
    com.legstar.test.coxb.redopera.
    DfhcommareaType reply = null;
    
    try {
              
      /* Initialize invoker with static data and data from headers */
      mInvoker.initialize(getHostParameters(hostHeader), "redopera");

      /* Prepare the input parameter set using static binding */
      com.legstar.test.coxb.redopera.bind.
        DfhcommareaTypeBinding cein =
          new com.legstar.test.coxb.redopera.bind.
              DfhcommareaTypeBinding(jaxbInFactory, request);
      mInParameter.setComplexBinding(cein);
      
      /* Prepare the output parameter set using static binding */
      com.legstar.test.coxb.redopera.bind.
      DfhcommareaTypeBinding ceout =
          new com.legstar.test.coxb.redopera.bind.
              DfhcommareaTypeBinding(jaxbOutFactory);
      mOutParameter.setComplexBinding(ceout);
      
      /* Call remote program */
      mInvoker.invoke(mInParameter, mOutParameter);
      
      /* Get reply object */
      reply = ceout.getJaxbObject(); 
      
    } catch (CIXSException e) {
      reportRedoperaFaultException(e,
          "Failed to invoke host program:");
    }

    return reply;
  }

  /**
   * Formats a fault element to notify client of an exception.
   *
   * @param e the exception which occured
   * @param text short message describing the context
   * @throws RedoperaFault the fault exception
   */
  private void reportRedoperaFaultException(
      final Exception e,
      final String text) throws RedoperaFault {
    e.printStackTrace();
    RedoperaFaultInfo faultInfo = new RedoperaFaultInfo();
    faultInfo.setMessage(e.getMessage());
    faultInfo.setDetail("Operation="
            + "Redopera"
            + " Package="
            + "com.legstar.test.cixs.redopera");
    throw (new RedoperaFault(text + ' ' 
            + faultInfo.getMessage(), faultInfo));
    
  }


  /**
   * Extracts header data from SOAP header.
   * 
   * @param hostHeader the JAXB object mapping the SOAP header element
   * @return the header data
   */
  private CIXSHeader getHostParameters(
          final RedoperaHostHeader hostHeader) {
    if (hostHeader == null) {
        return null;
    }
    CIXSHeader ch = new CIXSHeader();
    ch.setHostUser(hostHeader.getHostUser());
    ch.setHostPassword(hostHeader.getHostPassword());
    ch.setHostIPAddress(hostHeader.getHostIPAddress());
    ch.setHostIPPort(hostHeader.getHostIPPort());
    ch.setHostCICWPath(hostHeader.getHostCICWPath());
    return ch;
  }
  
}
