<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.legsem.legstar</groupId>
        <artifactId>legstar-eclipse</artifactId>
        <version>1.4.5-SNAPSHOT</version>
        <relativePath>../legstar-eclipse</relativePath>
    </parent>
    <version>1.4.5-SNAPSHOT</version>
    <artifactId>legstar-common-plugin</artifactId>
    <packaging>jar</packaging>
    <name>LegStar Common Eclipse plugin</name>
    <description>Common Eclipse plugin.</description>
    <url>http://www.legsem.com/legstar</url>

    <dependencies>
    
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-coxbgen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-cixsgen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-codegen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-cob2xsd</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-xsd2cob</artifactId>
        </dependency>
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-java2cob</artifactId>
        </dependency>
   
        <!-- Generated Web Services will need this to compile
             correctly. -->
        <dependency>
            <groupId>com.legsem.legstar</groupId>
            <artifactId>legstar-invoker</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Eclipse dependencies. -->
        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.resources</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jface</groupId>
            <artifactId>org.eclipse.jface</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.ide</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.workbench</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.preferences</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.forms</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.core</groupId>
            <artifactId>org.eclipse.core.jobs</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.osgi</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.debug</groupId>
            <artifactId>org.eclipse.debug.core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.platform</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.swt</groupId>
            <artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ui</groupId>
            <artifactId>org.eclipse.ui.ide</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.ant</groupId>
            <artifactId>org.eclipse.ant.ui</artifactId>
        </dependency>

        <!-- Used by cixcom plugin -->
        <dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>com.legstar.eclipse.plugin.common_${project.version}</finalName>
        <filters>
            <filter>${project.basedir}/bundle-version.properties</filter>
        </filters>
        <resources>
            <!-- Filter MANIFEST and plugin properties file -->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>META-INF/MANIFEST.MF</include>
                    <include>build.properties</include>
                </includes>
                <targetPath>${project.basedir}</targetPath>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>build.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>src/main/resources/**</include>
                    <include>plugin.xml</include>
                    <include>icons/**</include>
                    <include>lib/**</include>
                </includes>
            </resource>
        </resources>

        <plugins>
        
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
        
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>

                    <!-- Create a PDE compatible version (needed for resources filtering) -->
                    <execution>
                        <id>create-pde-version</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <ant antfile="${basedir}/src/main/ant/prepare-pde-version.xml">
                                    <property name="legstarVersion" value="${version}" />
                                </ant>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <!-- Cleanup the lib folder before it is populated with all dependencies -->
                    <execution>
                        <id>populate-lib</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${basedir}/lib"/>
                                <delete includeemptydirs="true">
                                    <fileset dir="${basedir}/lib" includes="**/*"/>
                                </delete>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>


                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy all dependencies to the lib folder -->
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${basedir}/lib</outputDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <executions>

                    <!-- Produce a readme file to be included with distribution -->
                    <execution>
                        <id>build-readme</id>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <sourceDirectory>src/site/docbook</sourceDirectory>
                            <targetDirectory>target/doc</targetDirectory>
                            <includes>install-instructions.xml</includes>
                            <chunkedOutput>false</chunkedOutput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    
</project>