/*******************************************************************************
 * LegStar legacy Web-enablement .
 * Copyright (C)  2007 LegSem
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301  USA
 * 
 *     
 *****************************************************************************/

package com.legstar.test.coxb.arrayscx.bind;

import com.legstar.host.HostException;
import com.legstar.coxb.ICobolBinding;
import com.legstar.coxb.rt.CComplexBinding;

import com.legstar.coxb.rt.CArrayComplexBinding;
import java.util.List;
import java.util.ArrayList;

import com.legstar.test.coxb.arrayscx.TableRedefType;
import com.legstar.test.coxb.arrayscx.ObjectFactory;

/**
 * This class was generated by COXB version 1.0.
 * 2007-01-26T18:17:18.515+01:00
 * This class implements a bi-directional binding between a cobol structure and
 * a java object. Visitors can use this class to visit each element of the
 * structure in turn. No reflection or annotations are used which makes this
 * class suitable for heavy loads.
 */

public class TableRedefTypeWrapperBinding 
             extends CArrayComplexBinding
             implements ICobolBinding {
  
    /** Name of java property to which this cobol element is bound. */
    private static final String JAVA_NAME = "tableRedefWrapper";
  
    /** Type of java property to which this cobol element is bound. */
    private static final String JAVA_TYPE = "TableRedefType";
    
    /** Minimum number of occurences for wrapped array. */
    private static final int MIN_OCCURS = 3;
    
    /** Maximum number of occurences for wrapped array. */
    private static final int MAX_OCCURS = 3;
    
    
    
    /** Binding for one of the complex array items. */
    private TableRedefTypeBinding tableRedef;
        
    /** Java object to which this cobol complex array element is bound. */
    private List < TableRedefType > mJaxbObject;
  
    /** Java object factory for objects creation. */
    private ObjectFactory mObjectFactory;
  
    /**
     * No argument constructor.
     */
    public TableRedefTypeWrapperBinding() {
        this(null, null, null);
    }
  
    /**
     * Constructor for a child complex binding which be later bound to a JAXB
     * object.
     * @param parentObject the parent binding
     */
    public TableRedefTypeWrapperBinding(
        final CComplexBinding parentObject) {
        this(parentObject, null, null);
    }
  
    /**
     * Constructor for a root complex binding without an initial bound object.
     * @param objectFactory the java factory to use to create children instances
     */
    public TableRedefTypeWrapperBinding(
        final ObjectFactory objectFactory) {
        this(null, objectFactory, null);
    }

    /**
     * Constructor for a root complex binding from an existing java object.
     * @param objectFactory the java factory to use to create children instances
     * @param jaxbObject the java object to which this element is bound
     */
    public TableRedefTypeWrapperBinding(
        final ObjectFactory objectFactory,
        final List < TableRedefType > jaxbObject) {
        this(null, objectFactory, jaxbObject);
    }

    /**
     * Constructor for a child complex binding with immediate binding to a JAXB
     * object.
     * @param parentObject the parent binding
     * @param objectFactory the java factory to use to create children instances
     * @param jaxbObject the java object to which this element is bound
     */
    public TableRedefTypeWrapperBinding(
        final CComplexBinding parentObject,
        final ObjectFactory objectFactory,
        final List < TableRedefType > jaxbObject) {
        
        super(JAVA_NAME, JAVA_TYPE, parentObject, new TableRedefTypeBinding(parentObject), MIN_OCCURS, MAX_OCCURS);
        mJaxbObject = jaxbObject;
        mObjectFactory = objectFactory;
        initChildren();
    }
  
    /** Creates a binding property for each child. */
    public final void initChildren() {
        tableRedef = (TableRedefTypeBinding) getComplexBinding();
        
    }
  
   
    /** {@inheritDoc} */
    public final void createBoundObject() throws HostException {
        setJaxbObject(new ArrayList < TableRedefType >());
    }
    
    /** {@inheritDoc} */
    public final void initBoundItem(
        final int index) throws HostException {
    }
       
    /** {@inheritDoc} */
    public final void prepareChildren() throws HostException {
    
        /* Pass on the JAXB factory to child tableRedef  */
        tableRedef.setObjectFactory(mObjectFactory);

    }
  
   
    /** {@inheritDoc} */
    public final void getValuesFromBoundItem(
        final int index) throws HostException {
        tableRedef.setJaxbObject(mJaxbObject.get(index));
    }
       
    /** {@inheritDoc} */
    public final void setBoundItemValues(
        final int index) throws HostException {
        mJaxbObject.add(tableRedef.getJaxbObject());
    }
       
    /** {@inheritDoc} */
    public final Object getValue() throws HostException {
        return mJaxbObject;
    }

    /**
     * @return the java object to which this cobol complex element is bound
     */
    public final List < TableRedefType > getJaxbObject() {
        return mJaxbObject;
    }

    /**
     * @param jaxbObject the java object to which this cobol complex element
     * is bound
     */
    public final void setJaxbObject(
        final List < TableRedefType > jaxbObject) {
        mJaxbObject = jaxbObject;
    }

    /**
     * @return the java object factory for objects creation
     */
    public final ObjectFactory getObjectFactory() {
        return mObjectFactory;
    }

    /**
     * @param objectFactory the java object factory for objects creation to set
     */
    public final void setObjectFactory(final ObjectFactory objectFactory) {
        mObjectFactory = objectFactory;
    }

}
