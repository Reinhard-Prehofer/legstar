 -----
 Overview
 -----
 Fady Moussallam
 -----
 26 Decembre 2008
 -----

COBOL Binding Application Programming Interface (Coxbapi) overview

  The Cobol binding API provides the capability to dynamically map Cobol structures to
  complex Java objects.
  
  The API itself does not provide implementation (see {{{../legstar-coxbrt}COBOL Binding Runtime}} for an
  implementation). This separation allows implementations to evolve without impact on higher level
  modules.
  
  An important class in the API is {{{apidocs/com/legstar/coxb/CobolElement.html}CobolElement}} which is a java annotation that represent
  the mapping between a Java property and a Cobol data element. 
  
  Another important class is {{{apidocs/com/legstar/coxb/common/CComplexBinding.html}CComplexBinding}} which represents binding of a complex
  structure. It implements the visitor pattern by providing a generic "accept" method. This is important
  since most users of this API are likely to need navigating those structures.

Transformation API

  Transformations are a high level API meant to simplify the task of turning a mainframe payload into java and vice versa.
  
  The transformation classes ({{{apidocs/com/legstar/coxb/transform/AbstractHostToJavaTransformer.html}AbstractHostToJavaTransformer}}
  and {{{apidocs/com/legstar/coxb/transform/AbstractJavaToHostTransformer.html}AbstractJavaToHostTransformer}}) are abstract classes
  from which you can derive your own implementations. See the javadoc for further information on how to achieve this.
  