
package com.legstar.test.lsfileac.bind;

import com.legstar.host.HostException;
import com.legstar.test.lsfileac.ObjectFactory;
import com.legstar.test.lsfileac.ReplyDataType;
import com.legstar.coxb.ICobolBinding;
import com.legstar.coxb.rt.CComplexBinding;

import com.legstar.coxb.rt.CPackedDecimalBinding;
import java.math.BigDecimal;


/**
 * This class was generated by COXB version 1.0.
 * 2007-05-14T17:10:43.25+02:00
 * This class implements a bi-directional binding between a cobol structure and
 * a java object. Visitors can use this class to visit each element of the
 * structure in turn. No reflection or annotations are used which makes this
 * class suitable for heavy loads.
 */

public class ReplyDataTypeBinding 
             extends CComplexBinding
             implements ICobolBinding {
  
    /** Name of java property to which this cobol element is bound. */
    private static final String JAVA_NAME = "ReplyDataType";
  
    /** Type of java property to which this cobol element is bound. */
    private static final String JAVA_TYPE = "ReplyDataType";
    
    /** Child property CPackedDecimalBinding of simple type. */
    public CPackedDecimalBinding replyItemscount;
            
    /** Child property ReplyItemTypeWrapperBinding of complexArray type. */
    public ReplyItemTypeWrapperBinding replyItem;
            
    /** Java object to which this cobol complex array element is bound. */
    private ReplyDataType mJaxbObject;
  
    /** Java object factory for objects creation. */
    private ObjectFactory mObjectFactory;
  
    /**
     * No argument constructor.
     */
    public ReplyDataTypeBinding() {
        this(null, null, null);
    }
  
    /**
     * Constructor for a child complex binding which be later bound to a JAXB
     * object.
     * @param parentObject the parent binding
     */
    public ReplyDataTypeBinding(
        final CComplexBinding parentObject) {
        this(parentObject, null, null);
    }
  
    /**
     * Constructor for a root complex binding without an initial bound object.
     * @param objectFactory the java factory to use to create children instances
     */
    public ReplyDataTypeBinding(
        final ObjectFactory objectFactory) {
        this(null, objectFactory, null);
    }

    /**
     * Constructor for a root complex binding from an existing java object.
     * @param objectFactory the java factory to use to create children instances
     * @param jaxbObject the java object to which this element is bound
     */
    public ReplyDataTypeBinding(
        final ObjectFactory objectFactory,
        final ReplyDataType jaxbObject) {
        this(null, objectFactory, jaxbObject);
    }

    /**
     * Constructor for a child complex binding with immediate binding to a JAXB
     * object.
     * @param parentObject the parent binding
     * @param objectFactory the java factory to use to create children instances
     * @param jaxbObject the java object to which this element is bound
     */
    public ReplyDataTypeBinding(
        final CComplexBinding parentObject,
        final ObjectFactory objectFactory,
        final ReplyDataType jaxbObject) {
        
        super(JAVA_NAME, JAVA_TYPE, parentObject);
        mJaxbObject = jaxbObject;
        mObjectFactory = objectFactory;
        initChildren();
    }
  
    /** Creates a binding property for each child. */
    public final void initChildren() {
    
        /* Create binding children instances */
        replyItemscount = new CPackedDecimalBinding("replyItemscount", 5, 8, 0, false);
        replyItemscount.setCobolName("REPLY-ITEMSCOUNT");
        replyItemscount.setIsODOObject(true);
        replyItem = new ReplyItemTypeWrapperBinding(this);
        
        /* Add children to children list */
           
        getChildrenList().add(replyItemscount);
        getChildrenList().add(replyItem);
    }
  
   
    /** {@inheritDoc} */
    public final void createBoundObject() throws HostException {
        setJaxbObject(mObjectFactory.createReplyDataType());
    }
       
    /** {@inheritDoc} */
    public final void prepareChildren() throws HostException {
    
        /* Pass on the JAXB factory to child replyItem  */
        replyItem.setObjectFactory(mObjectFactory);

    }
  
   
    /** {@inheritDoc} */
    public final void getValuesFromBoundObject() throws HostException {
        /* Set this binding properties from java object property values */
                     
        if (mJaxbObject.getReplyItemscount() != 0L) {
            /* Set value from replyItemscount*/
            replyItemscount.setValue(new BigDecimal(mJaxbObject.getReplyItemscount()));
        
        }
                
        if (mJaxbObject.getReplyItem() != null) {
            /* Set value from replyItem*/
            replyItem.setJaxbObject(mJaxbObject.getReplyItem());
            
        } else {
            replyItem.createBoundObject();
        }
                
    }
       
    /** {@inheritDoc} */
    public final void setBoundObjectValue(final int index) throws HostException {
        /* Set the JAXB object property value from binding object */
        switch (index) {
        case 0:
            setBoundObjectValueReplyItemscount();
            break;
        case 1:
            setBoundObjectValueReplyItem();
            break;
        }
    }
            
    /** Set corresponding JAXB object property value. */
    private final void setBoundObjectValueReplyItemscount() throws HostException {
    
        if (replyItemscount.getValue() != null) {
            
            /* Set value of replyItemscount*/
            mJaxbObject.setReplyItemscount(replyItemscount.getValue().longValueExact());
                
        }
        
    }

    /** Set corresponding JAXB object property value. */
    private final void setBoundObjectValueReplyItem() throws HostException {
    
        /* Set value of complex array child replyItem*/
        mJaxbObject.getReplyItem().clear();
        mJaxbObject.getReplyItem().addAll(replyItem.getJaxbObject());
        
    }

    /** {@inheritDoc} */
    public final Object getValue() throws HostException {
        return mJaxbObject;
    }

    /**
     * @return the java object to which this cobol complex element is bound
     */
    public final ReplyDataType getJaxbObject() {
        return mJaxbObject;
    }

    /**
     * @param jaxbObject the java object to which this cobol complex element
     * is bound
     */
    public final void setJaxbObject(
        final ReplyDataType jaxbObject) {
        mJaxbObject = jaxbObject;
    }

    /**
     * @return the java object factory for objects creation
     */
    public final ObjectFactory getObjectFactory() {
        return mObjectFactory;
    }

    /**
     * @param objectFactory the java object factory for objects creation to set
     */
    public final void setObjectFactory(final ObjectFactory objectFactory) {
        mObjectFactory = objectFactory;
    }

}
